#!/bin/bash

# The second field of inputurls has the file names for each file; we can extract from the file name the code that needs to be appended to each gene:
while read -r line;
do

  # This creates a variable, code, that holds taxon abbreviation code for that genome file:
  export abbrev=`echo "$line" | awk -F',' '{print $4}'`
  # This constructs the file name where the longest transcript data is stored:
  export name=$abbrev'_filteredTranscripts.fasta'

# Let's copy the downloaded raw data to a directory for cleaning:
  echo Making a directory for the cleaned data files.
  mkdir ./2_CleanedData
  cp ./1_RawData/$name ./2_CleanedData/$name
  cd ./2_CleanedData

# Now I want to use sed to insert the taxon abbreviation code in front of every gene name:
# The problem with this is that sed works a little differently on the cluster than on my computer. I'd prefer to replace this code switching with an if then structure.
  # Cluster code:
    #sed '' "s/>/>${abbrev}_/g" $name > cleaned$name
  # My computer code:
    echo Cleaning the data file $name , appending the prefix $abbrev and removing special characters from gene names
    sed "s|>|>${abbrev}_|g" $name > cleaned$name
    sed -i'.original' -e "s|(||g" cleaned$name
    sed -i'.original' -e "s|)||g" cleaned$name
    sed -i'.original' -e "s|-||g" cleaned$name

    echo Displaying the beginning of the cleaned data file:
    head cleaned$name
    rm *.original
    rm $name

    cd ../

done < $1
