#!/bin/bash

# This script requires the path to labelled phylogenies and the prefix used when labelling them with LabellingPhylogeniesHYPHY.R as command line arguments.

# Export required paths:
export LD_LIBRARY_PATH=/usr/local/gcc-7.3.0/lib64:/usr/local/gcc-7.3.0/lib

# Make a directory for BUSTED[S] outputs:
mkdir ./9_2_ABSRELResults/
mkdir ./9_2_ABSRELResults/$2/
mkdir ./9_2_ABSRELResults/$2/foreground
mkdir ./9_2_ABSRELResults/$2/background

# Download the newest version of HyPhy:
export PATH=/home/$USER/miniconda3/bin:$PATH
conda install -c bioconda hyphy

ls -hSr 8_2_RemovedStops > fileList.txt
while read -r line;
do
  export cdsFile=8_2_RemovedStops/"$line"
  #echo the coding sequence alignment file is $cdsFile
  # The tree file needs to look like OG0002680_tree.txt. $f looks like  /8_2_RemovedStops/cleaned_OG0002680_cds.fasta.
  export orthogroupNumber=`echo "$line" | awk -F'_' '{print ($2)}'`
  #echo The orthogroup number is $orthogroupNumber
  export treeFile=$2"Labelled_"$orthogroupNumber"_tree.txt"
  #echo The path to tree file is $1$treeFile

  if [ -f "$1$treeFile" ]; then
    echo "$1$treeFile exists."
    echo Removing any special characters in $1$treeFile
    sed -i'.original' -e "s|\||_|g" $1$treeFile
    rm $1$treeFile.original

    # Example cds file: ./8_2_BustedResults/cleaned_OG0013039_cds.fasta

    # Example gene tree file: /workdir/mb2337/FormicidaeMolecularEvolution/9_1_LabelledPhylogenies/workerPolymorphism/workerPolymorphismLabelled_OG0006202_tree.txt

    #Example command: hyphy absrel --alignment /Users/meganbarkdull/mb2337/FormicidaeMolecularEvolution/8_2_RemovedStops/cleaned_OG0001224_cds.fasta --tree  /Users/meganbarkdull/Projects/FormicidaeMolecularEvolution/test.txt --srv Yes --output absrelTest.json --branches Foreground

    echo Running aBSREL on $cdsFile and $1$treeFile.
    hyphy absrel --alignment $cdsFile --tree $1$treeFile --branches Foreground --output "./9_2_ABSRELResults/"$2"/foreground/"$orthogroupNumber"_absrel.json"
    hyphy absrel --alignment $cdsFile --tree $1$treeFile --branches 'Unlabeled branches' --output "./9_2_ABSRELResults/"$2"/background/"$orthogroupNumber"_absrel.json"

  else
    echo "$1$treeFile does not exist because this orthogroup consists of three or fewer sequences."
  fi

  #echo __________________________________________________

done < fileList.txt
